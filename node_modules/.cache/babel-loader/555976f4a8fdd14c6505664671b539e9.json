{"ast":null,"code":"import Plus from \"../../assets/images/PlusIcon.vue\";\nimport EditIcon from \"../../assets/images/EditIcon.vue\";\nimport DeleteButtonVue from \"@/assets/images/DeleteButton.vue\";\nimport ActivityEmptyStateVue from \"@/components/ActivityEmptyState.vue\";\nimport ChevronLeftVue from \"@/components/ChevronLeft.vue\";\nimport StatusView from \"@/components/StatusView.vue\";\nimport ClickOutside from 'vue-click-outside';\nimport AddItem from \"@/components/AddItem.vue\";\nimport PopupView from \"@/components/PopupView.vue\";\nimport MenuArrow from \"@/assets/images/MenuArrow.vue\";\nimport SortLatest from \"../../assets/images/SortLatest.vue\";\nimport SortOldest from \"../../assets/images/SortOldest.vue\";\nimport SortAZ from \"../../assets/images/SortAZ.vue\";\nimport SortZA from \"../../assets/images/SortZA.vue\";\nimport SortUnfinished from \"../../assets/images/SortUnfinished.vue\";\nimport ChecklistIcon from \"@/assets/images/ChecklistIcon.vue\";\nexport default {\n  name: 'ActivityView',\n  components: {\n    Plus,\n    ActivityEmptyStateVue,\n    ChevronLeftVue,\n    EditIcon,\n    DeleteButtonVue,\n    StatusView,\n    AddItem,\n    PopupView,\n    MenuArrow,\n    SortLatest,\n    SortOldest,\n    SortAZ,\n    SortZA,\n    SortUnfinished,\n    ChecklistIcon\n  },\n\n  data() {\n    return {\n      listItem: [],\n      selectedData: 0,\n      deletePopup: false,\n      addPopup: false,\n      sortPopup: false,\n      inputFocused: false,\n      inputValue: \"-\",\n      checkedList: [],\n      selectedSort: \"Terbaru\",\n      sortList: [\"Terbaru\", \"Terlama\", \"A-Z\", \"Z-A\", \"Belum Selesai\"],\n      editTitle: \"\",\n      editStatus: \"\",\n      typePassed: \"\",\n      idPassed: 0,\n      initialLoading: true\n    };\n  },\n\n  mounted() {\n    this.getListItem();\n  },\n\n  methods: {\n    getListItem() {\n      this.initialLoading = true;\n      this.$http.get(\"https://todo.api.devcode.gethired.id/activity-groups/\" + this.$route.params.id).then(response => {\n        this.initialLoading = false;\n        this.listItem = response.data;\n        this.selectSort(\"Terbaru\");\n        this.listItem.todo_items.forEach(dt => {\n          if (dt.is_active === 0) {\n            dt.is_active = true;\n          } else {\n            dt.is_active = false;\n          }\n        });\n        this.inputValue = this.listItem.title;\n      }, err => {\n        console.log(err);\n      });\n    },\n\n    updateTitle() {\n      this.$http.patch(\"https://todo.api.devcode.gethired.id/activity-groups/\" + this.$route.params.id, {\n        title: this.inputValue ? this.inputValue : \"-\"\n      }).then(response => {\n        this.listItem = { ...this.listItem,\n          title: response.data.title\n        };\n      }, err => {\n        console.log(err);\n      });\n    },\n\n    updateActive(data) {\n      const formData = {\n        is_active: data.is_active === true ? 1 : 0,\n        priority: data.priority\n      };\n      this.$http.patch(\"https://todo.api.devcode.gethired.id/todo-items/\" + data.id, formData).then(() => {//\n      }, err => {\n        console.log(err);\n      });\n    },\n\n    createNewItem() {\n      const formData = {\n        \"title\": \"New Activity\",\n        \"email\": \"joshuahendrawan03@gmail.com\"\n      };\n      this.$http.post(\"https://todo.api.devcode.gethired.id/activity-groups\", formData).then(() => {\n        this.getListCardData();\n      }, err => {\n        console.log(err);\n      });\n    },\n\n    setVisibilityDeletePopup(dt) {\n      this.deletePopup = !this.deletePopup;\n      this.selectedData = dt;\n    },\n\n    setVisibilityAddPopup(param = \"\", data) {\n      if (param === \"edit\") {\n        this.editStatus = data.priority;\n        this.editTitle = data.title;\n        this.typePassed = \"edit\";\n        this.idPassed = data.id;\n      } else {\n        this.editStatus = \"\";\n        this.editTitle = \"\";\n        this.typePassed = \"\";\n        this.idPassed = 0;\n      }\n\n      this.addPopup = !this.addPopup;\n    },\n\n    eventModalClossed() {\n      setTimeout(() => {\n        this.deletePopup = false;\n        this.addPopup = false;\n      }, 250);\n    },\n\n    setInputFocus(param) {\n      this.inputFocused = param;\n      const elementInput = document.getElementsByClassName(\"activity-detail__header-text\");\n      setTimeout(() => {\n        elementInput[0].focus();\n      }, 100);\n\n      if (param === false) {\n        this.updateTitle();\n      }\n    },\n\n    backToDashboard() {\n      this.$router.push(\"/\");\n    },\n\n    returnActive(data) {\n      if (data.is_active === 0) {\n        return false;\n      } else {\n        return true;\n      }\n    },\n\n    setSortPopup() {\n      this.sortPopup = !this.sortPopup;\n    },\n\n    selectSort(data) {\n      this.selectedSort = data;\n      this.sortPopup = false;\n\n      if (data === \"Terbaru\") {\n        this.listItem.todo_items.sort((a, b) => {\n          if (a.id < b.id) {\n            return -1;\n          }\n\n          if (a.id > b.id) {\n            return 1;\n          }\n\n          return 0;\n        });\n      } else if (data === \"Terlama\") {\n        this.listItem.todo_items.sort((a, b) => {\n          if (a.id < b.id) {\n            return 1;\n          }\n\n          if (a.id > b.id) {\n            return -1;\n          }\n\n          return 0;\n        });\n      } else if (data === \"A-Z\") {\n        this.listItem.todo_items.sort((a, b) => {\n          if (a.title.toLowerCase() < b.title.toLowerCase()) {\n            return -1;\n          }\n\n          if (a.title.toLowerCase() > b.title.toLowerCase()) {\n            return 1;\n          }\n\n          return 0;\n        });\n      } else if (data === \"Z-A\") {\n        this.listItem.todo_items.sort((a, b) => {\n          if (a.title.toLowerCase() < b.title.toLowerCase()) {\n            return 1;\n          }\n\n          if (a.title.toLowerCase() > b.title.toLowerCase()) {\n            return -1;\n          }\n\n          return 0;\n        });\n      } else if (data === \"Belum Selesai\") {\n        this.listItem.todo_items.sort((a, b) => {\n          if (a.is_active < b.is_active) {\n            return -1;\n          }\n\n          if (a.is_active > b.is_active) {\n            return 1;\n          }\n\n          return 0;\n        });\n      }\n    }\n\n  },\n  computed: {\n    sortedData(data, sortType) {\n      if (sortType === \"Terbaru\") {\n        data.sort((a, b) => {\n          if (a.id < b.id) {\n            return -1;\n          }\n\n          if (a.id > b.id) {\n            return 1;\n          }\n\n          return 0;\n        });\n      } else if (sortType === \"Terlama\") {\n        data.sort((a, b) => {\n          if (a.id < b.id) {\n            return 1;\n          }\n\n          if (a.id > b.id) {\n            return -1;\n          }\n\n          return 0;\n        });\n      } else if (sortType === \"A-Z\") {\n        data.sort((a, b) => {\n          if (a.title.toLowerCase() < b.title.toLowerCase()) {\n            return -1;\n          }\n\n          if (a.title.toLowerCase() > b.title.toLowerCase()) {\n            return 1;\n          }\n\n          return 0;\n        });\n      } else if (sortType === \"Z-A\") {\n        data.sort((a, b) => {\n          if (a.title.toLowerCase() < b.title.toLowerCase()) {\n            return 1;\n          }\n\n          if (a.title.toLowerCase() > b.title.toLowerCase()) {\n            return -1;\n          }\n\n          return 0;\n        });\n      } else if (sortType === \"Belum Selesai\") {\n        data.sort((a, b) => {\n          if (a.is_active < b.is_active) {\n            return -1;\n          }\n\n          if (a.is_active > b.is_active) {\n            return 1;\n          }\n\n          return 0;\n        });\n      }\n\n      return data;\n    }\n\n  },\n  directives: {\n    ClickOutside\n  }\n};","map":{"version":3,"mappings":"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","names":["name","components","Plus","ActivityEmptyStateVue","ChevronLeftVue","EditIcon","DeleteButtonVue","StatusView","AddItem","PopupView","MenuArrow","SortLatest","SortOldest","SortAZ","SortZA","SortUnfinished","ChecklistIcon","data","listItem","selectedData","deletePopup","addPopup","sortPopup","inputFocused","inputValue","checkedList","selectedSort","sortList","editTitle","editStatus","typePassed","idPassed","initialLoading","mounted","methods","getListItem","dt","err","console","updateTitle","title","updateActive","is_active","priority","createNewItem","setVisibilityDeletePopup","setVisibilityAddPopup","eventModalClossed","setTimeout","setInputFocus","elementInput","backToDashboard","returnActive","setSortPopup","selectSort","computed","sortedData","directives","ClickOutside"],"sourceRoot":"src/views/activity","sources":["ActivityView.vue"],"sourcesContent":["<template>\n  <div class=\"activity-detail__container\">\n    <div class=\"activity-detail__header\">\n      <div class=\"activity-detail__header-container\">\n        <div data-cy=\"todo-back-button\" class=\"activity-detail__header-back\" @click=\"backToDashboard()\">\n          <ChevronLeftVue></ChevronLeftVue>\n        </div>\n        <input data-cy=\"todo-title\" class=\"activity-detail__header-text\" :class=\"{'activity-detail__header-text_focused': inputFocused}\" v-model=\"inputValue\" v-if=\"inputFocused === true\" @blur=\"setInputFocus(false)\">\n        <p data-cy=\"todo-title\" class=\"activity-detail__header-text\" @click=\"setInputFocus(true)\" v-else>{{inputValue}}</p>\n        <div data-cy=\"todo-title-edit-button\" @click=\"setInputFocus(true)\" class=\"activity-detail__header-edit\">\n          <EditIcon></EditIcon>\n        </div>\n      </div>\n      <div class=\"activity-detail__header-button\">\n        <div class=\"activity-detail__header-button-sort\" v-click-outside=\"() => sortPopup = false\">\n          <div data-cy=\"todo-sort-button\" class=\"activity-detail__header-button-sort-shape\" @click=\"setSortPopup()\">\n            <MenuArrow></MenuArrow>\n          </div>\n          <div class=\"activity-detail__header-button-sort-menu-container\" v-if=\"sortPopup\">\n          <!-- dt === 'Terbaru' ? 'sort-latest' : dt === 'Terlama' ? 'sort-oldest' : dt === 'A-Z' ? 'sort-az' : dt === 'Z-A' ? 'sort-za' : 'sort-unfinished' -->\n            <div data-cy=\"sort-selection\"  class=\"activity-detail__header-button-sort-menu\" v-for=\"(dt, index) in sortList\" :key=\"index\" @click=\"selectSort(dt)\">\n              <div class=\"activity-detail__header-button-sort-menu-item\">\n                <SortLatest v-if=\"dt === 'Terbaru'\"></SortLatest>\n                <SortOldest v-else-if=\"dt === 'Terlama'\"></SortOldest>\n                <SortAZ v-else-if=\"dt === 'A-Z'\"></SortAZ>\n                <SortZA v-else-if=\"dt === 'Z-A'\"></SortZA>\n                <SortUnfinished v-else-if=\"dt === 'Belum Selesai'\"></SortUnfinished>\n                <p class=\"activity-detail__header-button-sort-menu-item-text\">{{dt}}</p>\n                <div class=\"activity-detail__header-button-sort-menu-item-checklist\" v-if=\"dt === selectedSort\">\n                  <ChecklistIcon></ChecklistIcon>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div data-cy=\"todo-add-button\" class=\"activity-detail__header-button-shape\" @click=\"setVisibilityAddPopup()\">\n          <Plus></Plus>\n          <p class=\"activity-detail__header-button-shape-text\">Tambah</p>\n        </div>\n      </div>\n    </div>\n    <div class=\"dashboard__loading\" v-if=\"initialLoading\">\n      <img class=\"dashboard__loading-img\" src=\"../../assets/images/SpinnerTransparent.gif\" />\n    </div>\n    <div class=\"activity-detail__empty-state\" v-else>\n      <div class=\"activity-detail__list-item-container\" v-if=\"listItem?.todo_items?.length > 0\">\n        <div data-cy=\"todo-item\" class=\"activity-detail__list-item\" v-for=\"(dt,index) in listItem.todo_items\" :key=\"index\">\n          <div class=\"activity-detail__list-item-content\">\n            <input data-cy=\"todo-item-checkbox\" type=\"checkbox\" class=\"activity-detail__list-item-content-checkbox\" :class=\"{'activity-detail__list-item-checkbox_checked': dt.is_active === false}\" v-model=\"dt.is_active\" @click=\"updateActive(dt)\"/>\n            <div data-cy=\"todo-item-priority-indicator\">\n              <StatusView :status=\"dt.priority\"></StatusView>\n            </div>\n            <p data-cy=\"todo-item-title\" class=\"activity-detail__list-item-content-title\" :class=\"{'activity-detail__list-item-content-title_done': dt.is_active === true}\">{{dt.title}}</p>\n            <div data-cy=\"todo-item-edit-button\" class=\"activity-detail__list-item-content-edit\" @click=\"setVisibilityAddPopup('edit', dt)\">\n              <EditIcon></EditIcon>\n            </div>\n            <div data-cy=\"todo-item-delete-button\" class=\"activity-detail__list-item-content-delete\" @click=\"setVisibilityDeletePopup(dt)\">\n              <DeleteButtonVue></DeleteButtonVue>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div data-cy=\"todo-empty-state\" @click=\"setVisibilityAddPopup()\" v-else>\n        <ActivityEmptyStateVue :imageNumber=\"2\"></ActivityEmptyStateVue>\n      </div>\n    </div>\n\n    <!-- Modal -->\n    <AddItem v-if=\"addPopup\" @close-modal=\"eventModalClossed\" @get-list-item=\"getListItem\" :titlePassed=\"editTitle\" :statusPassed=\"editStatus\" :typeModal=\"typePassed\" :idPassed=\"idPassed\"></AddItem>\n    <PopupView v-if=\"deletePopup\" :type=\"'item'\" :activityName=\"selectedData.title\" @close-modal=\"eventModalClossed\" @get-list-card=\"getListItem\" :activityId=\"selectedData.id\" ></PopupView>\n  </div>\n</template>\n\n<script>\nimport Plus from \"../../assets/images/PlusIcon.vue\"\nimport EditIcon from \"../../assets/images/EditIcon.vue\";\nimport DeleteButtonVue from \"@/assets/images/DeleteButton.vue\";\nimport ActivityEmptyStateVue from \"@/components/ActivityEmptyState.vue\";\nimport ChevronLeftVue from \"@/components/ChevronLeft.vue\";\nimport StatusView from \"@/components/StatusView.vue\";\n\nimport ClickOutside from 'vue-click-outside'\nimport AddItem from \"@/components/AddItem.vue\";\nimport PopupView from \"@/components/PopupView.vue\";\nimport MenuArrow from \"@/assets/images/MenuArrow.vue\";\nimport SortLatest from \"../../assets/images/SortLatest.vue\";\nimport SortOldest from \"../../assets/images/SortOldest.vue\";\nimport SortAZ from \"../../assets/images/SortAZ.vue\";\nimport SortZA from \"../../assets/images/SortZA.vue\";\nimport SortUnfinished from \"../../assets/images/SortUnfinished.vue\";\nimport ChecklistIcon from \"@/assets/images/ChecklistIcon.vue\";\n\nexport default {\n  name: 'ActivityView',\n  components: {\n    Plus,\n    ActivityEmptyStateVue,\n    ChevronLeftVue,\n    EditIcon,\n    DeleteButtonVue,\n    StatusView,\n    AddItem,\n    PopupView,\n    MenuArrow,\n    SortLatest,\n    SortOldest,\n    SortAZ,\n    SortZA,\n    SortUnfinished,\n    ChecklistIcon\n},\n\n  data() {\n    return {\n      listItem: [],\n      selectedData: 0,\n      deletePopup: false,\n      addPopup: false,\n      sortPopup: false,\n      inputFocused: false,\n      inputValue: \"-\",\n      checkedList: [],\n      selectedSort: \"Terbaru\",\n      sortList: [\"Terbaru\", \"Terlama\", \"A-Z\", \"Z-A\", \"Belum Selesai\"],\n      editTitle: \"\",\n      editStatus: \"\",\n      typePassed: \"\",\n      idPassed: 0,\n      initialLoading: true\n    }\n  },\n  mounted() {\n    this.getListItem()\n  },\n  methods: {\n    getListItem() {\n      this.initialLoading = true\n      this.$http.get(\"https://todo.api.devcode.gethired.id/activity-groups/\"+this.$route.params.id).then((response) => {\n        this.initialLoading = false\n        this.listItem = response.data\n        this.selectSort(\"Terbaru\")\n        this.listItem.todo_items.forEach(dt => {\n          if(dt.is_active === 0) {\n            dt.is_active = true\n          } else {\n            dt.is_active = false\n          }\n        })\n        this.inputValue = this.listItem.title\n      }, err => {\n        console.log(err)\n      })\n    },\n    updateTitle() {\n      this.$http.patch(\"https://todo.api.devcode.gethired.id/activity-groups/\"+this.$route.params.id, {title: this.inputValue ? this.inputValue : \"-\"}).then((response) => {\n        this.listItem = {\n          ...this.listItem,\n          title: response.data.title\n        }\n      }, err => {\n        console.log(err)\n      })\n    },\n    updateActive(data) {\n      const formData = {\n        is_active: data.is_active === true ? 1 : 0,\n        priority: data.priority\n      }\n      this.$http.patch(\"https://todo.api.devcode.gethired.id/todo-items/\"+data.id, formData).then(() => {\n        //\n      }, err => {\n        console.log(err)\n      })\n    },\n    createNewItem() {\n      const formData = {\n        \"title\": \"New Activity\",\n        \"email\": \"joshuahendrawan03@gmail.com\",\n      }\n      this.$http.post(\"https://todo.api.devcode.gethired.id/activity-groups\", formData).then(() => {\n        this.getListCardData()\n      }, err => {\n        console.log(err)\n      })\n    },\n    setVisibilityDeletePopup(dt) {\n      this.deletePopup = !this.deletePopup\n      this.selectedData = dt\n    },\n    setVisibilityAddPopup(param = \"\", data) {\n      if(param === \"edit\") {\n        this.editStatus = data.priority\n        this.editTitle = data.title\n        this.typePassed = \"edit\"\n        this.idPassed = data.id\n      } else {\n        this.editStatus = \"\"\n        this.editTitle = \"\"\n        this.typePassed = \"\"\n        this.idPassed = 0\n      }\n      this.addPopup = !this.addPopup\n    },\n    eventModalClossed() {\n      setTimeout(() => {\n        this.deletePopup = false\n        this.addPopup = false\n      }, 250)\n    },\n    setInputFocus(param) {\n      this.inputFocused = param\n      const elementInput = document.getElementsByClassName(\"activity-detail__header-text\")\n      setTimeout(() => {\n        elementInput[0].focus()\n      }, 100)\n\n      if(param === false) {\n        this.updateTitle()\n      }\n    },\n    backToDashboard() {\n      this.$router.push(\"/\")\n    },\n    returnActive(data) {\n      if(data.is_active === 0) {\n        return false\n      } else {\n        return true\n      }\n    },\n    setSortPopup() {\n      this.sortPopup = !this.sortPopup\n    },\n    selectSort(data) {\n      this.selectedSort = data\n      this.sortPopup = false\n      if(data === \"Terbaru\") {\n        this.listItem.todo_items.sort((a, b) => {\n          if(a.id < b.id ) { return -1; }\n          if(a.id > b.id ) { return 1; }\n          return 0;\n        })\n      } else if(data === \"Terlama\") {\n        this.listItem.todo_items.sort((a, b) => {\n          if(a.id < b.id ) { return 1; }\n          if(a.id > b.id ) { return -1; }\n          return 0;\n        })\n      } else if(data === \"A-Z\") {\n        this.listItem.todo_items.sort((a, b) => {\n          if(a.title.toLowerCase() < b.title.toLowerCase() ) { return -1; }\n          if(a.title.toLowerCase() > b.title.toLowerCase() ) { return 1; }\n          return 0;\n        })\n      } else if(data === \"Z-A\") {\n        this.listItem.todo_items.sort((a, b) => {\n          if(a.title.toLowerCase() < b.title.toLowerCase() ) { return 1; }\n          if(a.title.toLowerCase() > b.title.toLowerCase() ) { return -1; }\n          return 0;\n        })\n      } else if(data === \"Belum Selesai\") {\n        this.listItem.todo_items.sort((a, b) => {\n          if(a.is_active < b.is_active ) { return -1; }\n          if(a.is_active > b.is_active ) { return 1; }\n          return 0;\n        })\n      }\n    }\n  },\n\n  computed: {\n    sortedData(data, sortType) {\n      if(sortType === \"Terbaru\") {\n        data.sort((a, b) => {\n          if(a.id < b.id ) { return -1; }\n          if(a.id > b.id ) { return 1; }\n          return 0;\n        })\n      } else if(sortType === \"Terlama\") {\n        data.sort((a, b) => {\n          if(a.id < b.id ) { return 1; }\n          if(a.id > b.id ) { return -1; }\n          return 0;\n        })\n      } else if(sortType === \"A-Z\") {\n        data.sort((a, b) => {\n          if(a.title.toLowerCase() < b.title.toLowerCase() ) { return -1; }\n          if(a.title.toLowerCase() > b.title.toLowerCase() ) { return 1; }\n          return 0;\n        })\n      } else if(sortType === \"Z-A\") {\n        data.sort((a, b) => {\n          if(a.title.toLowerCase() < b.title.toLowerCase() ) { return 1; }\n          if(a.title.toLowerCase() > b.title.toLowerCase() ) { return -1; }\n          return 0;\n        })\n      } else if(sortType === \"Belum Selesai\") {\n        data.sort((a, b) => {\n          if(a.is_active < b.is_active ) { return -1; }\n          if(a.is_active > b.is_active ) { return 1; }\n          return 0;\n        })\n      }\n\n      return data\n    }\n  },\n\n  directives: {\n    ClickOutside\n  },\n  \n}\n\n</script>\n"]},"metadata":{},"sourceType":"module"}